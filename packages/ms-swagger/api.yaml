openapi: 3.0.0

info:
  title: Business API
  description: API description
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1
    description: local Server
    #Tempory
  - url: http://localhost:3000/api
    description: second Server
  - url: http://localhost:3000/api/v1/business/
    description: local Server
    #Tempory
  - url: http://example.com/
    description: original server

components:
  schemas:
    BCOrderItems:
      type: object
      properties:
        bizId:
          type: string
          example: biz001
        orderId:
          type: string
          example: oreder001
        itemId:
          type: string
          example: 62168136f2cfbcd73640c343
        qty:
          type: number
          example: 50
        unitPrice:
          type: number
          example: 10000
        status:
          type: string
          example: pending
        createdAt:
          type: date
          example: 2022-01-20
        updatedAt:
          type: date
          example: 2022-01-20
        # id:
        #   type: string
        #   example: 62168136f2cfbcd73640c343
      required:
        - bizId
        - orderId
        - itemId
        - qty
        - unitPrice
        - status

  requestBodies:
    BCOrderItemsBody:
      description: A JSON object containing Order Items information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BCOrderItems"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  security:
    - bearerAuth: []

paths:
  /business/customer-order-items:
    get:
      deprecated: true
      summary: Returns a list of all Customer order items.
      tags:
        - customer-order-items
      description: All availble Customer order items in the database. use only for the development
      produces:
        - application/json
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: User Error
        404:
          description: Not found error

    post:
      tags:
        - customer-order-items
      summary: Create Customer order items
      description: Create order items of a customer with the item details
      produces:
        - application/json
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/BCOrderItemsBody"
      responses:
        201:
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: Error
        404:
          description: Not found error

  /business/customer-order-items/order/{orderId}:
    get:
      tags:
        - customer-order-items
      summary: Get a list of Customer order item by order id.
      description: Returns the infomation of a Customer order item by the orderId
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: orderId of the Customer order item
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: User Error
        404:
          description: Not found error

  /business/customer-order-items/{id}:
    get:
      tags:
        - customer-order-items
      summary: Get Customer order item by id.
      description: Returns the infomation of a Customer order item
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the Customer order item
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: User Error
        404:
          description: Not found error

    put:
      tags:
        - customer-order-items
      summary: Update Customer order item
      description: Update an existing Customer order item by passing the id as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/BCOrderItemsBody"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the order item to be updated
      responses:
        201:
          description: Successfully Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: Error
        404:
          description: Not found error

    delete:
      tags:
        - customer-order-items
      summary: Delete Customer order item
      description: Delete an existing Customer order item by passing the id as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the order item to be Deleted
      responses:
        200:
          description: Successfully Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BCOrderItems"
        400:
          description: Error
        404:
          description: Not found error

  #-------------------------------  BizCustomerOrders  -------------------------------

  /business/biz-customer-order:
    get:
      tags:
        - customer-order
      deprecated: true
      summary: Get All customer orders
      description: All availble Customer orders in the database. use only for the development
      produces:
        - application/json
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: User Error
        404:
          description: Not found error

    post:
      tags:
        - customer-order
      summary: Create Customer order
      description: Create an order of a customer with order details
      produces:
        - application/json
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/BizCustomerOrderBody"
      responses:
        201:
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: Error
        404:
          description: Not found error

  /business/biz-customer-order/{id}:
    put:
      tags:
        - customer-order
      summary: Update Customer order
      description: Update an existing order by passing the id as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/BizCustomerOrderBody"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the order to be updated
      responses:
        201:
          description: Successfully Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: Error
        404:
          description: Not found error

    delete:
      tags:
        - customer-order
      summary: Delete an order
      description: Delete an existing Customer order by passing the id as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the order to be Deleted
      responses:
        200:
          description: Successfully Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: Error
        404:
          description: Not found error

    get:
      tags:
        - customer-order
      summary: Get order by id
      description: returns the details of a order by passing the id as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the order
      responses:
        201:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: Error
        404:
          description: Not found error

  /business/biz-customer-order/biz/{bizId}:
    get:
      tags:
        - customer-order
      summary: Get order by bizId
      description: returns the details of a order by passing the bizId as a parameter
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bizId
          schema:
            type: string
          required: true
          description: bizId of the customer
      responses:
        201:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizCustomerOrders"
        400:
          description: Error
        404:
          description: Not found error
